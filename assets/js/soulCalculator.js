const SoulCalculator=function(){const e={legend:[0,717,789,867,1302,1431,1575,1732,1905,3239,3563,3919,4312,4742,9484,10433,11476,17214,18935,28403,31243,31868,32505,33155,33818,34494],immortal:[0,2151,2367,2601,3906,4293,4725,5196,5715,9717,10689,11757,12936,14226,28452,31299,34428,51642,56805,85209,93729,95604,97515,99465,101454,103482],dosak:[0,717,789,867,1302,1431,1575,1732,1905,3239,3563,3919,4312,4742,9484,10433,11476,17214,18935,28403,31243,31868,32505,33155,33818,34494]},t=1e3,n=100,s=10,a={legend:"전설",immortal:"불멸",dosak:"도색"},l={legend:{bg:"#e74c3c",border:"#c0392b",text:"white"},immortal:{bg:"#f1c40f",border:"#d4ac0d",text:"white"}};function c(){const e=document.getElementById("expType").value;document.querySelectorAll(".exp-tab").forEach((t=>{t.classList.remove("active"),t.getAttribute("data-type")===e&&t.classList.add("active")})),o(e),p()}function i(){const e=document.getElementById("calculateBtn");e.classList.add("clicked"),setTimeout((()=>{e.classList.remove("clicked")}),700);document.querySelectorAll(".result-box").forEach((e=>{e.classList.remove("flash"),e.offsetWidth,e.classList.add("flash")})),u();document.getElementById("resultsPanel").classList.remove("hidden")}function d(){const e=document.querySelectorAll(".exp-tab");e.forEach((t=>{t.addEventListener("click",(function(){const t=this.getAttribute("data-type");e.forEach((e=>e.classList.remove("active"))),this.classList.add("active"),function(e){document.getElementById("expType").value=e}(t),o(t),p()}))})),o("legend")}function o(t){const n=document.getElementById("expTableLeft"),s=document.getElementById("expTableRight");n.innerHTML="",s.innerHTML="";const a=e[t];for(let e=0;e<=13;e++){const t=document.createElement("tr");t.innerHTML=`\n              <td>${e}</td>\n              <td>${a[e].toLocaleString()}</td>\n          `,n.appendChild(t)}for(let e=14;e<=25;e++){const t=document.createElement("tr");t.innerHTML=`\n              <td>${e}</td>\n              <td>${a[e].toLocaleString()}</td>\n          `,s.appendChild(t)}p()}function r(){let e=document.getElementById("currentLevel"),t=document.getElementById("targetLevel");parseInt(e.value)>24?e.value=24:parseInt(e.value)<0&&(e.value=0),parseInt(t.value)>25?t.value=25:parseInt(t.value)<=parseInt(e.value)&&(t.value=parseInt(e.value)+1,parseInt(t.value)>25&&(t.value=25)),p()}function u(){const c=document.getElementById("expType").value,i=a[c]||c,d=l[c]||{bg:"#f5f5f5",border:"#e0e0e0",text:"#333"},o=parseInt(document.getElementById("currentLevel").value)||0,r=parseInt(document.getElementById("targetLevel").value)||1,u=document.getElementById("required"),v=document.getElementById("maxLevel"),m=parseInt(document.getElementById("highSoul").value)||0,g=parseInt(document.getElementById("midSoul").value)||0,f=parseInt(document.getElementById("lowSoul").value)||0,h=m*t+g*n+f*s;if(isNaN(o)||isNaN(r)||o<0||o>24||r<=o||r>25)return u.innerHTML='<div class="result-title insufficient">레벨 범위 오류</div>\n          현재 레벨(0~24)과 목표 레벨(1~25)을 확인해주세요.',void(v.innerHTML="");const L=e[c],E=L.slice(o+1,r+1).reduce(((e,t)=>e+t),0),y=Math.floor(E/t),I=Math.floor(E%t/n),$=Math.ceil(E%n/s),x=Math.max(0,E-h),B=Math.floor(x/t),b=Math.floor(x%t/n),w=Math.ceil(x%n/s),T=`background-color: ${d.bg}; border-color: ${d.border}; color: ${d.text};`;u.innerHTML=function(e,t,n,s,a,l,c,i,d,o,r,u,p,v,m){let g=`\n      <div class="result-title required-title">필요 환수혼 <span class="type-badge" style="${t}">${e}</span></div>\n      <div class="result-section">\n        <div class="data-row">\n          <span>레벨 ${n} → ${s}</span>\n          <span class="data-value highlight">${a.toLocaleString()}exp</span>\n        </div>\n      </div>\n      \n      <div class="sub-title">필요 환수혼 수량</div>\n      <div class="data-row">\n        <span><img src="assets/img/high-soul.jpg" alt="최상급" class="soul-icon">최상급</span>\n        <span class="data-value">${l}개 ${d>=l?'<span class="sufficient">✓</span>':`<span class="insufficient">-${l-d}</span>`}</span>\n      </div>\n      <div class="data-row">\n        <span><img src="assets/img/mid-soul.jpg" alt="상급" class="soul-icon">상급</span>\n        <span class="data-value">${c}개 ${o>=c?'<span class="sufficient">✓</span>':`<span class="insufficient">-${c-o}</span>`}</span>\n      </div>\n      <div class="data-row">\n        <span><img src="assets/img/low-soul.jpg" alt="하급" class="soul-icon">하급</span>\n        <span class="data-value">${i}개 ${r>=i?'<span class="sufficient">✓</span>':`<span class="insufficient">-${i-r}</span>`}</span>\n      </div>`;u<a&&(g+=`\n          <div class="sub-title">추가 필요(최적 조합)</div>\n          <div class="data-row">\n            <span><img src="assets/img/high-soul.jpg" alt="최상급" class="soul-icon">최상급</span>\n            <span class="data-value">${p}개</span>\n          </div>\n          <div class="data-row">\n            <span><img src="assets/img/mid-soul.jpg" alt="상급" class="soul-icon">상급</span>\n            <span class="data-value">${v}개</span>\n          </div>\n          <div class="data-row">\n            <span><img src="assets/img/low-soul.jpg" alt="하급" class="soul-icon">하급</span>\n            <span class="data-value">${m}개</span>\n          </div>`);return g}(i,T,o,r,E,y,I,$,m,g,f,h,B,b,w);const S=function(e,t,n){let s=e,a=n;for(let n=e+1;n<=25&&a>=t[n];n++)a-=t[n],s=n;let l=0,c=0;s<25&&(l=t[s+1],c=Math.floor(a/l*100));return{maxLevel:s,nextLevelExp:l,nextLevelProgress:c,remainingOwnedExp:a}}(o,L,h),{maxLevel:M,nextLevelExp:j,nextLevelProgress:q,remainingOwnedExp:A}=S;v.innerHTML=function(e,t,n,s,a,l,c,i,d,o,r,u){let p=`\n      <div class="result-title max-title">도달 가능 레벨 <span class="type-badge" style="${t}">${e}</span></div>\n      <div class="result-section">\n        <div class="data-row">\n          <span>보유 환수혼</span>\n          <span class="data-value highlight">${n.toLocaleString()}exp</span>\n        </div>\n        <div class="data-row">\n          <span>\n            <img src="assets/img/high-soul.jpg" alt="최상급" class="soul-icon">${s}\n            <img src="assets/img/mid-soul.jpg" alt="상급" class="soul-icon">${a}\n            <img src="assets/img/low-soul.jpg" alt="하급" class="soul-icon">${l}\n          </span>\n        </div>\n      </div>\n      \n      <div class="result-section">\n        <div class="data-row">\n          <span>최대 도달 레벨</span>\n          <span class="data-value highlight">${c}</span>\n        </div>`;c<25&&(p+=`\n          <div class="data-row">\n            <span>다음 레벨 진행도</span>\n            <span class="data-value">${r}%</span>\n          </div>\n          <div class="data-row">\n            <span>남은 경험치</span>\n            <span class="data-value">${u.toLocaleString()} / ${o.toLocaleString()}</span>\n          </div>`);return p+=`\n      </div>\n      \n      <div class="result-section">\n        ${c>=i?`<span class="sufficient">목표 레벨 ${i} 달성 가능!</span>`:`<span class="insufficient">목표 레벨 ${i}까지 ${d-n} 경험치 부족</span>`}\n      </div>`,p}(i,T,h,m,g,f,M,r,E,j,q,A),p()}function p(){const a=parseInt(document.getElementById("currentLevel").value)||0,l=parseInt(document.getElementById("targetLevel").value)||1,c=document.querySelectorAll("#expTableLeft tr"),i=document.querySelectorAll("#expTableRight tr");if(v(c),v(i),a>=0&&a<=13?c[a].classList.add("current-level"):a>13&&a<=24&&i[a-14].classList.add("current-level"),l>=1&&l<=13?c[l].classList.add("target-level"):l>13&&l<=25&&i[l-14].classList.add("target-level"),document.getElementById("resultsPanel").classList.contains("hidden"))return;const d=parseInt(document.getElementById("highSoul").value)||0,o=parseInt(document.getElementById("midSoul").value)||0,r=parseInt(document.getElementById("lowSoul").value)||0;if(d>0||o>0||r>0){const u=d*t+o*n+r*s,p=document.getElementById("expType").value,v=e[p];let m=a,g=u;for(let e=a+1;e<=25&&g>=v[e];e++)g-=v[e],m=e;m!==l&&(m>=0&&m<=13?c[m].classList.add("max-level"):m>13&&m<=25&&i[m-14].classList.add("max-level"))}}function v(e){e.forEach((e=>{e.classList.remove("current-level"),e.classList.remove("target-level"),e.classList.remove("max-level")}))}return{initialize:function(){document.getElementById("currentLevel").addEventListener("change",r),document.getElementById("targetLevel").addEventListener("change",r),document.getElementById("calculateBtn").addEventListener("click",i),document.getElementById("expType").addEventListener("change",c),document.querySelectorAll('input[type="number"]').forEach((e=>{e.addEventListener("input",(function(){this.value<0&&(this.value=0)}))})),d(),p()},handleExpTypeChange:c,validateInputs:r,calculate:u,updateExpTables:o,highlightCurrentTables:p}}();