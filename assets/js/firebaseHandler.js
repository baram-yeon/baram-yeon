const FirebaseHandler=function(){let e=null;const t=window.CommonData.DOCUMENT_MAP||{};return{initFirebase:function(){if("undefined"!=typeof firebase&&firebase.app)if(firebase.apps.length)e=firebase.app().firestore();else try{firebase.initializeApp(firebaseConfig),e=firebase.firestore()}catch(t){e=null}},testFirebaseConnectivity:async function(){await async function(){if(!e)return!1;if(0===Object.keys(t).length)return!1;try{const r=Object.values(t)[0];return!!r&&(await e.collection("jsonData").doc(r).get({source:"server"}),!0)}catch(e){return console.error("Firebase connection test failed:",e),!1}}()||console.warn("Warning: Firebase connection test failed or Firestore unavailable. Relying on cache/local files.")},getFirestoreDocument:async function(r){const o=t[r+".json"],a=`firestore_${r}`,n=`${a}_time`,i=localStorage.getItem(a),s=localStorage.getItem(n);if(i&&s&&Date.now()-parseInt(s)<864e5)try{return JSON.parse(i)}catch(e){localStorage.removeItem(a),localStorage.removeItem(n)}if(e&&o)try{const t=await e.collection("jsonData").doc(o).get();if(t.exists){const e=t.data();if(e)return localStorage.setItem(a,JSON.stringify(e)),localStorage.setItem(n,Date.now().toString()),e}}catch(e){console.error(`Error fetching ${r} from Firestore:`,e)}try{const e=await fetch(`output/${r}.json`);if(!e.ok)throw new Error(`Local fetch failed for ${r}.json: ${e.statusText} (${e.status})`);return await e.json()}catch(e){return{data:[]}}}}}();